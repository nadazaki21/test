
version: 2.1

commands:

  print_pipeline_id:
    description: "printing the pipleline id "
    parameters:
      var:
        type: string
        default: "not enetered "


    steps:

      - run: echo <<parameters.var>>  




jobs:
  say-hello:
   
    docker:
      - image: cimg/base:stable
   
    steps:
 
      - run:  echo Hello, World! > ~/output.txt
    
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt

  print-outputfile :
   
    docker:
      - image: cimg/base:stable
   
    steps:
      - attach_workspace:
         at: ~/

     
      - run:  cat ~/output.txt
    
      

  print-var:

    docker:
      - image: circleci/node:13.8.0 

    steps:

      - print_pipeline_id:
          var: $CIRCLE_WORKFLOW_ID
  

  fail:

    docker:
      - image: circleci/node:13.8.0
   
    steps:
    
      - run: exit 1

      - run:  #watch out for the alignment of these  paarameters 

          name:  fail on purpose 
          command: echo "when:on_fail works !"
          when: on_fail


  get-aws-ips:

    docker:
      - image:  circleci/node:13.8.0
    
    steps: 

      - persist_to_workspace:
            root: ~/
            paths:
              - output.txt  

    
      - run: aws ec2 describe-instances         --query 'Reservations[*].Instances[*].PublicIpAddress'       --filters "Name=tag:User,Values=Nada"       --output text >> ~/output.txt
        
  print-aws-ips:
    docker:
      - image:  circleci/node:13.8.0
    
    steps: 

      - attach_workspace:
          at: ~/

     
      - run:  cat ~/output.txt 


workflows:
  test:
    jobs:
      - say-hello
      - print-outputfile :
          requires: 
             - say-hello
      - print-var
      - fail
      - get-aws-ips
      - print-aws-ips:
        requires:
          -get-aws-ips





